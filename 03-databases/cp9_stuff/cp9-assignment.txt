1.Create a database for the model we built in the example. Create a SQL file that creates the tables and inserts sample data. Write queries that demonstrate the following scenarios:
    a.Find a guest who exists in the database and has not booked a room.
        SELECT * FROM guests WHERE id NOT IN (SELECT guest_id FROM visits);
        
    b.Find bookings for a guest who has booked two rooms for the same dates.
        SELECT guest_id, check_in, COUNT(*) FROM visits GROUP BY guest_id, check_in HAVING COUNT(*) > 1;
    
    c.Find bookings for a guest who has booked one room several times on different dates.
        SELECT guest_id, room_id, COUNT(*) FROM visits GROUP BY guest_id, room_id HAVING count(*) > 1;
        
    d.Count the number of unique guests who have booked the same room.
        SELECT count(DISTINCT guest_id) FROM visits WHERE room_id IN (
            SELECT room_id
            FROM visits
            GROUP BY room_id
            HAVING count(*) > 1);

2.Design a data model for students and the classes they have taken. The model should include the students' grades for a given class.
    a.Work through the questions from the example above.
        i.   What classes/entites do we need to model?
            We need three classes: Students, Classes.
        
        ii.  What fields/attributes will each entity need?
            Students: id, name, classes_taken, grade_earned
            Classes: id, subject, students
        
        iii. What data types do we need to use?
            Students: id integer, name text, classes_taken integer, grade_earned float(2)
            Classes: id integer, subject text, students integer
        
        iv.  What relationships exist between entities?
            Many to many
            
        v.   How should those relationships be represented in tables?
            [Students table] *..* ------------*..*[Classes table]
        
    b.Document any assumptions you make about what data should be stored, what data types should be used, etc., and include them in a text file.
        I first assumed that I also need a Grades table, but as i drew it out, i realized that many assumptions I had were incorrect.
        I ended up making a seperate table for each class.  In this case, more tables made the information easier to parse.  i'll be curious to see if that
        holds true in the future.
    
    c.Ask questions of your mentor if you are unsure about parts of your model.
    
    d.Draw the model using the notation used in the checkpoint and submit a picture. You can also use a tool like StarUML or quickdatabasediagrams.com if you choose.
        https://app.quickdatabasediagrams.com/#/schema/Oxr0lAk-ckGMgjb6AAqHaw

3.Build a database for the students/classes data model. Create a SQL file that creates the tables and inserts sample data (the questions below will help you create the data). Write queries that demonstrate the following scenarios:
    a.Find all students who have taken a particular class.
        SELECT students.name, math.student AS math_class FROM students JOIN math ON students.id = math.student;
        
    b.Count the number of each grade (using letter grades A-F) earned in a particular class.
        SELECT count(grade) FROM math WHERE grade = 'c';
    
    c.Find class names and the total number of students who have taken each class in the list.
        SELECT count(student) AS num_math_students FROM math;
        SELECT count(student) AS num_science_students  FROM science;
        SELECT count(student) AS num_science_students FROM history;