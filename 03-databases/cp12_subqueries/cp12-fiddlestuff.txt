
create table dogs (
  id integer,
  name varchar(50),
  gender text,
  age float,
  weight integer,
  intake_date date,
  breed text,
  in_foster boolean
);

create table adoptions (
  id integer,
  adopter text,
  cat_id integer,
  dog_id integer,
  fee integer,
  date date
);

create table adopters (
  id integer,
  first_name text,
  last_name text,
  address text,
  phone_number bigint
 );
 
 create table volunteers (
   id integer,
   name text,
   address text,
   phone_number bigint,
   available_to_foster boolean,
   foster_id integer
 );

create table cats (
   id integer,
   name text,
   gender text,
   age integer,
   intake_date date
  );
   
insert into dogs (id, name, gender, age, weight, intake_date, breed, in_foster ) values 
  (1,'Justice', 'M', 3.5, 105, '2016-11-05', 'shepwheiler', true),
  (2, 'Johnny', 'M', 1.5, 95, '2017-12-17', 'blood hound', false ),
  (3, 'June', 'F', 1.5, 85, '2017-05-16', 'blood hound', true),
  (4, 'Daisy', 'F', 1.5, 80, '2017-04-02', 'blood hound', true),
  (5, 'Flash', 'M', 12, 75, '2015-09-03', 'basset hound', false),
  (6, 'Vader', 'M', 5, 35, '2013-03-25', 'french bulldog', false),
  (7, 'Fido', 'M', 5, 15, '2016-03-25', 'french bulldog', true);
  
insert into adoptions (id, adopter, cat_id, dog_id, fee, date) values 
  (1, 'Rory', null, 3, 50, '2015-03-25'),
  (2, 'Sarah', null, 5, 45, '2016-02-14'),
  (3, 'Chritine', 1, null, 35, '2018-01-01'),
  (4, 'Jay', 4, null, 100, '2016-05-01'),
  (5, 'Jeremiah', null, 7, 75, '2014-10-31'),
  (6, 'TJ', 6, null, 25, '2015-07-04');
  
insert into adopters (id, first_name, last_name, address, phone_number) values
   (1, 'Rory', 'Trunkhill', 'las vegas', 5555555555),
   (2, 'Sarah', 'Hawkins', 'las vegas', 6666666666),
   (3, 'Christine', 'Le', 'san franscio', 7777777777),
   (4, 'Jay', 'Peterson', 'green bay', 8888888888),
   (5, 'Jeremiah', 'McMillen', 'pittsburgh', 9999999999),
   (6, 'TJ', 'McMacky', 'boston', 1111111111);

insert into volunteers (id, name, address, phone_number, available_to_foster, foster_id) values
  (1, 'jim', 'seattle', 1234567899, true, 1),
  (2, 'john', 'portland', 2345678901, true, null),
  (3, 'jessica', 'bend',  3456789120, false, 3),
  (4, 'jennifer', 'boise', 4567891212, true, 4),
  (5, 'jacob', 'helena', 5678912345, true, null),
  (6, 'jenna', 'salem', 6789123456, false, 7);
  
 insert into cats (id, name, gender, age, intake_date) values 
  (1,' Spike', 'F', 15,'2017-10-15'),
  (2, 'Pippen', 'F', 10,'2016-07-08'),
  (3, 'Toot', 'F', 8.5, '2017-12-26'),
  (4, 'Sherlock', 'M', 1.5,'2014-02-14'),
  (5, 'Shadow', 'M', 13, '2015-09-10'),
  (6, 'Fuzzy', 'F', 3, '2017-03-26');
  

______________________________________________________________________________________________________________________________

/* Create a list of volunteers who are available to foster. 
If they currently are fostering a dog, include the dog. 
Also include all dogs who are not currently in foster homes

1) list of volunteers available to foster
2) if they already have a foster dog, include it
3) list of all dogs not in foster

FUll outer join


 */

SELECT v.name AS vols_fostering, dogs.name 
FROM volunteers v, (SELECT name FROM dogs WHERE in_foster = true) dogs 
WHERE v.available_to_foster IS true;

Jim      Justice
null     Spike
Rory     null
____________________________________________________________________________________________________________________________________  

CREATE TABLE books (isbn varchar(17), title text, author text);
CREATE TABLE transactions (id integer, checked_out date, checked_in date, user_id integer, isbn varchar(17));
CREATE TABLE holds (id integer, isbn varchar(17), user_id integer, rank integer, date date);
CREATE TABLE patrons (id integer, name text, fine_amount money);

INSERT INTO books (isbn, title, author) VALUES
  ('111-1-11-111111-1', 'Sins of my Father', 'Barrack Obama'),
  ('222-2-22-222222-2', 'Art of the Deal', 'Donald Trump'),
  ('333-3-33-333333-3', 'Obama an Intimate Portraiot', 'Pete Souza'),
  ('444-4-44-444444-4', 'Fire and Fury', 'Michael Wolff'),
  ('555-5-55-555555-5', 'Harry Potter and the Sorcerers Stone', 'Some Chick');
   
INSERT INTO transactions (id, checked_out, checked_in, user_id, isbn) VALUES
  (1, '2017-02-14', '2017-03-25', 1, '444-4-44-444444-4'),
  (2, '2017-03-26', '2017-04-01', 2, '111-1-11-111111-1'),
  (3, '2018-01-05', '2018-01-17', 3, '333-3-33-333333-3'),
  (4, '2017-10-31', '2017-11-25', 1, '222-2-22-222222-2'),
  (5, '2010-01-01', '2010-01-05', 2, '555-5-55-555555-5'),
  (6, '2018-01-01', null, 6, '111-1-11-111111-1');
  
INSERT INTO holds (id, isbn, user_id, rank, date) VALUES
  (1, '222-2-22-222222-2', 3, 1, '2018-01-14'),
  (2, '111-1-11-111111-1', 1, 2, '2018-01-15'),
  (3, '444-4-44-444444-4', 4, 3, '2018-01-16'),
  (4, '333-3-33-333333-3', 2, 4, '2018-01-17'),
  (5, '555-5-55-555555-5', 3, 5, '2018-01-17'),
  (6, '555-5-55-555555-5', 4, 6, '2018-01-19');
  
INSERT INTO patrons (id, name, fine_amount) VALUES
  (1, 'rory', '$23.50'),
  (2, 'sarah', '$3.25'),
  (3, 'christine', '$100.00'),
  (4, 'barrack', '$0.00' ),
  (5, 'melania', '$1000.00'),
  (6, 'ivanka', '$2000.00');
  ____________________________________________________________________________________________________________________
  /* 
List all of the library patrons. If they have one or more books checked out, correspond the books to the patrons.

1) list all patrons
2) list all books where checked_out IS NOT null AND checked_in IS NULL
3) combine

FULL OUTER JOIN

*/

SELECT name 
FROM patrons;

SELECT * FROM transactions WHERE checked_out IS NOT null AND checked_in IS null;

SELECT p.name, checked_out.isbn 
FROM patrons AS p, (SELECT * FROM transactions WHERE checked_out IS NOT null AND checked_in IS null ) AS checked_out
WHERE ;
__________________________________________________________________________________________________________________________

CREATE TABLE airplanes (model text, seat_cap integer, range integer);
CREATE TABLE flights (
  flight_number integer, 
  destination text, 
  origin text, 
  company text, 
  distance integer, 
  flight_time integer, 
  airplane_model text);

CREATE TABLE transactions (
  id integer, 
  seats_sold integer, 
  total_revenue money, 
  total_cost money, 
  flight_number integer, 
  date date);
  
INSERT INTO airplanes (model, seat_cap, range) VALUES 
  (usbigplane, 1000, 7000),
  (usmidplane, 500, 5000),
  (ussmallplane, 250, 3000),
  (cabigplane, 900, 8000),
  (camidplane, 400, 6000),
  (casmallplane, 150, 2000);
  
INSERT INTO flights (flight_number, destination, origin, company, distance, flight_time, airplane_model) VALUES
  (),
  (),
  (),
  (),
  (),
  ();
  
INSERT INTO transactions (id, seats_sold, total_revenue, total_cost, flight_number, date) VALUES
  (),
  (),
  (),
  (),
  (),
  ();